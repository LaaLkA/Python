'''
Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
ценность. В случае с английским алфавитом очки распределяются так:
● A, E, I, O, U, L, N, S, T, R – 1 очко;
● D, G – 2 очка;
● B, C, M, P – 3 очка;
● F, H, V, W, Y – 4 очка;
● K – 5 очков;
● J, X – 8 очков;
● Q, Z – 10 очков.
А русские буквы оцениваются так:
● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
● Д, К, Л, М, П, У – 2 очка;
● Б, Г, Ё, Ь, Я – 3 очка;
● Й, Ы – 4 очка;
● Ж, З, Х, Ц, Ч – 5 очков;
● Ш, Э, Ю – 8 очков;
● Ф, Щ, Ъ – 10 очков.
Напишите программу, которая вычисляет стоимость введенного пользователем слова.
Будем считать, что на вход подается только одно слово, которое содержит либо только
английские, либо только русские буквы.
'''
'''
dt = {'A, E, I, O, U, L, N, S, T, R':1,
      'D, G':2,
      'B, C, M, P':3,
      'F, H, V, W, Y':4,
      'K':5,
      'J, X':8,
      'Q, Z':10,
      'А, В, Е, И, Н, О, Р, С, Т':1,
      'Д, К, Л, М, П, У':2,
      'Б, Г, Ё, Ь, Я':3,
      'Й, Ы':4,
      'Ж, З, Х, Ц, Ч':5,
      'Ш, Э, Ю':8,
      'Ф, Щ, Ъ':10,
      }
points = 0
word = input('Введите слово на русском или английском языке: ')
word = word.upper()
for ch in word:
    for key in dt.keys():
        if ch in key:
            points += dt[key]
print(points)
'''
# Исходные буквы за которые будем довать очки (points) Англ + Рус
chars = ['A, E, I, O, U, L, N, S, T, R, А, В, Е, И, Н, О, Р, С, Т',
    'D, G, Д, К, Л, М, П, У',
    'B, C, M, P, B, C, M, P, Б, Г, Ё, Ь, Я',
    'F, H, V, W, Y, Й, Ы',
    'K, Ж, З, Х, Ц, Ч',
    'J, X, Ш, Э, Ю',
    'Q, Z, Ф, Щ, Ъ'
]
coins = [1, 2, 3, 4, 5, 8, 10] # Очки за букву
dt = {} # Словарь со значениями букв + очков 
points = 0 # очки пользователя за слово

# Присваиваем каждой букве в условии определённые очки
for i in range(len(coins)):
    for c in chars[i].split(', '):
        dt[c] = coins[i]
        # dt[c.lower()] = coins[i] # Добавление буквы нижнего регистра 
        
user_word = input('Введите слово: ') # Пользователь пишет своё слово

# Считаем очки пользователя за слово
for search in user_word: # Берём по букве слово пользователя
    for item in dt.keys(): # Ищем в созданном выше словаре
        if search in item: # Если символ(буква) есть в словаре 
            points += dt[item] # Плюсуем очки
print(points) # Печатаем очки